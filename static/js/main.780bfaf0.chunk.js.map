{"version":3,"sources":["components/PostItem/PostItem.module.css","components/Posts/Post.module.css","pages/AuthenticationPage/AuthenticationPage.module.css","components/LikeButton/LikeButton.module.css","assets/comment.svg","components/NewComment/NewComment.module.css","assets/like-filled.svg","assets/like.svg","components/Posts/Posts.module.css","assets/instagram-text.png","components/Firebase/index.js","components/NewPost/index.js","components/NewPost/NewPost.js","hooks/useFirestore.js","components/LikeButton/index.js","components/LikeButton/LikeButton.js","hooks/useRouter.js","components/Posts/Post.js","components/Posts/index.js","components/Posts/Posts.js","pages/HomePage/index.js","pages/HomePage/HomePage.js","hooks/useFirestoreID.js","components/NewComment/index.js","components/NewComment/NewComment.js","components/PostItem/PostItem.js","components/PostItem/index.js","pages/AuthenticationPage/AuthenticationPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","storage","FieldValue","serverTimestamp","NewPost","useState","file","setFile","caption","setCaption","error","setError","types","onSubmit","event","preventDefault","includes","type","folderName","fileType","getFolderName","storageRef","ref","name","firestoreRef","collection","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","a","createdAt","Date","currentUser","uid","displayName","photoURL","getDownloadURL","then","url","add","user","userImage","comments","likedBy","autoComplete","htmlFor","onChange","target","files","id","value","disabled","useFirestore","posts","setPosts","useEffect","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","LikeButton","liked","setLiked","filter","liker","length","handleLike","updatedLikedBy","update","handleRemoveLike","className","styles","onClick","alt","src","FilledLikeIcon","LikeIcon","useRouter","params","useParams","location","useLocation","history","useHistory","match","useRouteMatch","useMemo","replace","pathname","query","queryString","parse","search","Image","Video","autoPlay","loop","Post","seconds","post","router","test","formatDistanceToNow","fromUnixTime","e","CommentIcon","Posts","map","key","HomePage","useFirestoreID","setPost","err","NewComment","comment","setComment","handlePostComment","get","currentComments","newComment","catch","placeholder","PostItem","shortFormatTimeStamp","date","now","dayDifference","differenceInDays","hourDifference","differenceInHours","minuteDifference","differenceInMinutes","secondDifference","differenceInSeconds","indexOf","document","getElementById","focus","formatTimestamp","AuthenticationPage","setUser","onAuthStateChanged","signOut","logo","provider","GoogleAuthProvider","signInWithPopup","href","App","isSignedIn","setIsSignedIn","exact","path","children","Boolean","window","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.780bfaf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"PostItem_main-container__3zLUK\",\"media\":\"PostItem_media__Hz1Wj\",\"post-details\":\"PostItem_post-details__3Sm5i\",\"header-border\":\"PostItem_header-border__gQjA2\",\"header\":\"PostItem_header__2BUo_\",\"caption\":\"PostItem_caption__31_GV\",\"comments\":\"PostItem_comments__ih549\",\"post-details-footer\":\"PostItem_post-details-footer__UdKG8\",\"action-bar\":\"PostItem_action-bar__29lFT\",\"post-details-footer-date\":\"PostItem_post-details-footer-date__fQDEy\",\"comment\":\"PostItem_comment__Rxfqu\",\"body\":\"PostItem_body__2tu8R\",\"user-image\":\"PostItem_user-image__dNkqL\",\"user-name\":\"PostItem_user-name__iBz2T\",\"text\":\"PostItem_text__JetTB\",\"footer\":\"PostItem_footer__gK2t0\",\"date\":\"PostItem_date__3VJek\",\"comment-button\":\"PostItem_comment-button__YBrnI\",\"icon\":\"PostItem_icon__Cqb2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3eRi_\",\"media\":\"Post_media__1MKAJ\",\"post-details\":\"Post_post-details__sRYCO\",\"user-image\":\"Post_user-image__1j0ao\",\"details\":\"Post_details__3dKFz\",\"uploader-name\":\"Post_uploader-name__1chH1\",\"time-posted\":\"Post_time-posted__3lvXY\",\"actions\":\"Post_actions__3oRHE\",\"comment-button\":\"Post_comment-button__1J3B4\",\"icon\":\"Post_icon__28Dh6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthenticationPage_container__2lzXg\",\"wrapper\":\"AuthenticationPage_wrapper__3U2IL\",\"form\":\"AuthenticationPage_form__1VSEV\",\"logo\":\"AuthenticationPage_logo__2_Oix\",\"button\":\"AuthenticationPage_button__1Gudi\",\"footer\":\"AuthenticationPage_footer__OJNK_\",\"links\":\"AuthenticationPage_links__1grxi\",\"link\":\"AuthenticationPage_link__2rDDz\",\"copyright\":\"AuthenticationPage_copyright__2elyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like-button\":\"LikeButton_like-button__1YtNj\",\"icon\":\"LikeButton_icon__3-Hmh\"};","module.exports = __webpack_public_path__ + \"static/media/comment.2bf9666a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewComment_container__17Brb\",\"input\":\"NewComment_input__pzyUy\",\"button\":\"NewComment_button__3VMog\"};","module.exports = __webpack_public_path__ + \"static/media/like-filled.e39a07e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.2da23ddc.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__HBDHm\"};","module.exports = __webpack_public_path__ + \"static/media/instagram-text.8b2206ad.png\";","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n","import NewPost from \"./NewPost\";\n\nexport default NewPost;\n","import React, { useState } from \"react\";\nimport { auth, firestore, storage } from \"../Firebase\";\n\nexport default function NewPost() {\n  const [file, setFile] = useState(null);\n  const [caption, setCaption] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = [\n    \"image/jpeg\",\n    \"image/png\",\n    \"video/mp4\",\n    \"video/webm\",\n    \"video/ogg\",\n  ];\n\n  const getFolderName = (fileType) => {\n    switch (fileType) {\n      case \"image/jpeg\":\n        return \"images\";\n      case \"image/png\":\n        return \"images\";\n      case \"video/mp4\":\n        return \"videos\";\n      case \"video/webm\":\n        return \"videos\";\n      case \"video/ogg\":\n        return \"videos\";\n      default:\n        break;\n    }\n  };\n\n  const handleFileChange = (event) => {\n    if (types.includes(event.target.files[0].type)) {\n      setError(null);\n      setFile(event.target.files[0]);\n    } else {\n      setError(\n        \"Invalid file: Please select an image (jpeg/png) or a video (mp4/webm/ogg).\"\n      );\n    }\n  };\n\n  const handleCaptionChange = (event) => {\n    setCaption(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (file && types.includes(file.type)) {\n      const folderName = getFolderName(file.type);\n      const storageRef = storage.ref(folderName + \"/\" + file.name);\n      const firestoreRef = firestore.collection(\"posts\");\n      const uploadTask = storageRef.put(file);\n      uploadTask.on(\n        \"state_changed\",\n        function (snapshot) {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n        },\n        function (error) {\n          console.log(error);\n        },\n        async function () {\n          const createdAt = new Date();\n          const { uid, displayName, photoURL } = auth.currentUser;\n          await uploadTask.snapshot.ref.getDownloadURL().then(function (url) {\n            firestoreRef.add({\n              url,\n              caption,\n              createdAt,\n              uid,\n              user: displayName,\n              userImage: photoURL,\n              type: file.type,\n              comments: [],\n              likedBy: [],\n            });\n          });\n        }\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2>New Post</h2>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label htmlFor=\"file\">Choose an image</label>\n        <input onChange={handleFileChange} type=\"file\" id=\"file\" />\n        <label htmlFor=\"caption\">Write a caption</label>\n        <input onChange={handleCaptionChange} type=\"text\" id=\"caption\" />\n        <input type=\"submit\" value=\"Share\" disabled={error} />\n      </form>\n      {error && <h3>{error}</h3>}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { firestore } from \"../components/Firebase\";\n\nconst useFirestore = (collection) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const unsub = firestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        let documents = [];\n        snapshot.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setPosts(documents);\n      });\n\n    return () => unsub();\n  }, [collection]);\n\n  return { posts };\n};\n\nexport default useFirestore;\n","import LikeButton from \"./LikeButton\";\n\nexport default LikeButton;\n","import React, { useEffect, useState } from \"react\";\nimport { auth, firestore } from \"../Firebase\";\nimport styles from \"./LikeButton.module.css\";\nimport FilledLikeIcon from \"../../assets/like-filled.svg\";\nimport LikeIcon from \"../../assets/like.svg\";\n\nexport default function LikeButton({ id, likedBy }) {\n  let user = {};\n  if (auth.currentUser) user = auth.currentUser;\n  const { uid, displayName, photoURL } = user;\n  const ref = firestore.collection(\"posts\").doc(id);\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    const userAlreadyLiked = likedBy.filter((liker) => {\n      return liker.uid === uid;\n    });\n    if (userAlreadyLiked.length > 0) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  }, [likedBy, uid]);\n\n  const handleLike = async () => {\n    const updatedLikedBy = [\n      ...likedBy,\n      {\n        uid,\n        user: displayName,\n        userImage: photoURL,\n        createdAt: new Date(),\n      },\n    ];\n\n    await ref.update({ likedBy: updatedLikedBy });\n  };\n\n  const handleRemoveLike = async () => {\n    const updatedLikedBy = likedBy.filter((liker) => {\n      return liker.uid !== uid;\n    });\n\n    await ref.update({ likedBy: updatedLikedBy });\n  };\n\n  return (\n    <div>\n      {liked && (\n        <button className={styles[\"like-button\"]} onClick={handleRemoveLike}>\n          <img className={styles[\"icon\"]} alt=\"Like\" src={FilledLikeIcon} />\n        </button>\n      )}\n      {!liked && (\n        <button className={styles[\"like-button\"]} onClick={handleLike}>\n          <img className={styles[\"icon\"]} alt=\"Like\" src={LikeIcon} />\n        </button>\n      )}\n    </div>\n  );\n}\n","import { useMemo } from \"react\";\nimport {\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nfunction useRouter() {\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  return useMemo(() => {\n    return {\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      query: {\n        ...queryString.parse(location.search), // Convert string to object\n        ...params,\n      },\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history]);\n}\n\nexport default useRouter;\n","import React from \"react\";\nimport LikeButton from \"../LikeButton\";\nimport styles from \"./Post.module.css\";\nimport { fromUnixTime, formatDistanceToNow } from \"date-fns\";\nimport CommentIcon from \"../../assets/comment.svg\";\nimport useRouter from \"../../hooks/useRouter\";\n\nfunction Image({ caption, url }) {\n  return <img className={styles[\"media\"]} alt={caption} src={url}></img>;\n}\n\nfunction Video({ url, type }) {\n  return (\n    <video className={styles[\"media\"]} autoPlay loop>\n      <source src={url} type={type} />\n    </video>\n  );\n}\n\nexport default function Post({ post }) {\n  const { caption, createdAt, id, url, user, userImage, type, likedBy } = post;\n  const router = useRouter();\n\n  const formatTimestamp = (seconds) => {\n    return formatDistanceToNow(fromUnixTime(seconds), new Date());\n  };\n\n  return (\n    <div className={styles[\"post\"]}>\n      {/image/g.test(type) && <Image caption={caption} url={url} />}\n      {/video/g.test(type) && <Video url={url} type={type} />}\n      <div className={styles[\"post-details\"]}>\n        <img className={styles[\"user-image\"]} alt={user} src={userImage} />\n        <div className={styles[\"details\"]}>\n          <p className={styles[\"uploader-name\"]}>{user}</p>\n          <p className={styles[\"time-posted\"]}>\n            {`${formatTimestamp(createdAt.seconds)} ago`}\n          </p>\n        </div>\n        <div className={styles[\"actions\"]}>\n          <LikeButton\n            className={styles[\"like-button\"]}\n            id={id}\n            likedBy={likedBy}\n          />\n          <div>\n            <button\n              className={styles[\"comment-button\"]}\n              onClick={(e) => router.push(`/post/${id}`)}\n            >\n              <img className={styles[\"icon\"]} alt=\"Comment\" src={CommentIcon} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Posts from \"./Posts\";\n\nexport default Posts;\n","import React from \"react\";\nimport useFirestore from \"../../hooks/useFirestore\";\nimport Post from \"./Post\";\nimport styles from \"./Posts.module.css\";\n\nexport default function Posts() {\n  const { posts } = useFirestore(\"posts\");\n\n  return (\n    <div className={styles.posts}>\n      {posts && posts.map((post) => <Post key={post.id} post={post} />)}\n    </div>\n  );\n}\n","import HomePage from \"./HomePage\";\n\nexport default HomePage;\n","import React from \"react\";\nimport NewPost from \"../../components/NewPost\";\nimport Posts from \"../../components/Posts\";\n\nexport default function HomePage() {\n  return (\n    <div>\n      <NewPost />\n      <Posts />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { firestore } from \"../components/Firebase\";\n\nconst useFirestoreID = (id) => {\n  const [post, setPost] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const ref = firestore.collection(\"posts\").doc(id);\n    const unsub = ref.onSnapshot(\n      (snapshot) => {\n        const data = snapshot.data();\n        if (data) setPost(data);\n      },\n      (err) => {\n        setError(err);\n      }\n    );\n    return () => unsub();\n  }, [id]);\n\n  return { post, error };\n};\n\nexport default useFirestoreID;\n","import NewComment from \"./NewComment\";\n\nexport default NewComment;\n","import React, { useState } from \"react\";\nimport { auth, firestore } from \"../Firebase\";\nimport styles from \"./NewComment.module.css\";\n\nexport default function NewComment({ id }) {\n  const [comment, setComment] = useState(null);\n  const ref = firestore.collection(\"posts\").doc(id);\n\n  if (auth.currentUser) {\n    const { uid, displayName, photoURL } = auth.currentUser;\n\n    const handleCommentChange = (event) => {\n      setComment(event.target.value);\n    };\n\n    const handlePostComment = async () => {\n      await ref\n        .get()\n        .then(async function (doc) {\n          const createdAt = new Date();\n          const currentComments = doc.data().comments;\n          const newComment = {\n            comment,\n            uid,\n            user: displayName,\n            userImage: photoURL,\n            createdAt,\n          };\n          let comments = {};\n          if (currentComments) {\n            comments = [...currentComments, newComment];\n          } else {\n            comments = [newComment];\n          }\n          await ref.update({\n            comments,\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    };\n    return (\n      <div className={styles[\"container\"]}>\n        <input\n          id=\"comment-input\"\n          className={styles[\"input\"]}\n          onChange={handleCommentChange}\n          type=\"text\"\n          placeholder=\"Add a comment...\"\n        />\n        <button className={styles[\"button\"]} onClick={handlePostComment}>\n          Post\n        </button>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useFirestoreID from \"../../hooks/useFirestoreID\";\nimport NewComment from \"../NewComment\";\nimport styles from \"./PostItem.module.css\";\nimport {\n  fromUnixTime,\n  formatDistanceToNow,\n  differenceInHours,\n  differenceInMinutes,\n  differenceInDays,\n  differenceInSeconds,\n} from \"date-fns\";\nimport LikeButton from \"../LikeButton\";\nimport CommentIcon from \"../../assets/comment.svg\";\n\nfunction Image({ caption, url }) {\n  return <img className={styles[\"media\"]} alt={caption} src={url}></img>;\n}\n\nfunction Video({ url, type }) {\n  return (\n    <video className={styles[\"media\"]} autoPlay loop>\n      <source src={url} type={type} />\n    </video>\n  );\n}\n\nexport default function PostItem() {\n  const { id } = useParams();\n  const { post } = useFirestoreID(id);\n\n  const formatTimestamp = (seconds) => {\n    const date = fromUnixTime(seconds);\n    const now = new Date();\n    return `${formatDistanceToNow(date, now)} ago`;\n  };\n\n  const shortFormatTimeStamp = (seconds) => {\n    const date = fromUnixTime(seconds);\n    const now = new Date();\n    const dayDifference = differenceInDays(now, date);\n\n    if (dayDifference < 1) {\n      const hourDifference = differenceInHours(now, date);\n      if (hourDifference < 1) {\n        const minuteDifference = differenceInMinutes(now, date);\n        if (minuteDifference < 1) {\n          const secondDifference = differenceInSeconds(now, date);\n          if (secondDifference < 1) {\n            return \"just now\";\n          } else {\n            return `${secondDifference}s`;\n          }\n        } else {\n          return `${minuteDifference}m`;\n        }\n      } else {\n        return `${hourDifference}h`;\n      }\n    } else {\n      return `${dayDifference}d`;\n    }\n  };\n\n  if (post && post.length !== 0) {\n    const {\n      caption,\n      createdAt,\n      url,\n      user,\n      userImage,\n      type,\n      comments,\n      likedBy,\n    } = post;\n\n    return (\n      <div className={styles[\"main-container\"]}>\n        <div className={styles[\"post-media\"]}>\n          {/image/g.test(type) && <Image caption={caption} url={url} />}\n          {/video/g.test(type) && <Video url={url} type={type} />}\n        </div>\n        <div className={styles[\"post-details\"]}>\n          <div className={styles[\"header-border\"]}>\n            <div className={styles[\"header\"]}>\n              <img\n                className={styles[\"user-image\"]}\n                alt={user}\n                src={userImage}\n              />\n              <div className={styles[\"body\"]}>\n                <p className={styles[\"user-name\"]}>{user}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className={styles[\"comments\"]}>\n            {caption && (\n              <div className={styles[\"caption\"]}>\n                <img\n                  className={styles[\"user-image\"]}\n                  alt={user}\n                  src={userImage}\n                />\n                <div className={styles[\"body\"]}>\n                  <div>\n                    <p className={styles[\"user-name\"]}>{user}</p>\n                    <span className={styles[\"text\"]}>{caption}</span>\n                  </div>\n                  <div className={styles[\"footer\"]}>\n                    <p className={styles[\"date\"]}>\n                      {shortFormatTimeStamp(createdAt.seconds)}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {comments &&\n              comments.map((comment) => (\n                <div\n                  className={styles[\"comment\"]}\n                  key={comments.indexOf(comment)}\n                >\n                  <img\n                    className={styles[\"user-image\"]}\n                    alt={comment.user}\n                    src={comment.userImage}\n                  />\n                  <div className={styles[\"body\"]}>\n                    <div>\n                      <p className={styles[\"user-name\"]}>{comment.user}</p>\n                      <span className={styles[\"text\"]}>{comment.comment}</span>\n                    </div>\n                    <div className={styles[\"footer\"]}>\n                      <p className={styles[\"date\"]}>\n                        {shortFormatTimeStamp(comment.createdAt.seconds)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n\n          <div className={styles[\"post-details-footer\"]}>\n            <div className={styles[\"action-bar\"]}>\n              <LikeButton id={id} likedBy={likedBy} />\n              <button\n                onClick={() => {\n                  const commentInput = document.getElementById(\"comment-input\");\n                  commentInput.focus();\n                }}\n                className={styles[\"comment-button\"]}\n              >\n                <img\n                  className={styles[\"icon\"]}\n                  alt=\"Comment\"\n                  src={CommentIcon}\n                />\n              </button>\n            </div>\n            {createdAt && (\n              <p className={styles[\"post-details-footer-date\"]}>\n                {formatTimestamp(createdAt.seconds)}\n              </p>\n            )}\n            <NewComment id={id} />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Post not found.</h1>\n      </div>\n    );\n  }\n}\n","import PostItem from \"./PostItem\";\n\nexport default PostItem;\n","import React, { useState } from \"react\";\nimport firebase, { auth } from \"../../components/Firebase\";\nimport logo from \"../../assets/instagram-text.png\";\nimport styles from \"./AuthenticationPage.module.css\";\n\nexport default function AuthenticationPage() {\n  const [user, setUser] = useState(null);\n\n  const unsub = auth.onAuthStateChanged(\n    function (user) {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n        return () => unsub();\n      }\n    },\n    function (error) {\n      console.log(error);\n    }\n  );\n\n  const handleSignIn = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth\n      .signInWithPopup(provider)\n      .then(() => setUser(auth.currentUser))\n      .catch((error) => console.log(error));\n  };\n\n  const handleSignOut = () => {\n    auth\n      .signOut()\n      .then(() => setUser(null))\n      .catch((error) => console.log(error));\n  };\n\n  if (user) {\n    return (\n      <div>\n        <h2>Authentication</h2>\n        <button onClick={handleSignOut}>Sign out</button>\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles[\"container\"]}>\n        <div className={styles[\"wrapper\"]}>\n          <div className={styles[\"form\"]}>\n            <img className={styles[\"logo\"]} alt=\"logo\" src={logo} />\n            <button className={styles[\"button\"]} onClick={handleSignIn}>\n              Sign in with Google\n            </button>\n          </div>\n        </div>\n        <div className={styles[\"footer\"]}>\n          <div className={styles[\"links\"]}>\n            <a className={styles[\"link\"]} href=\"#\">\n              About\n            </a>\n            <a\n              className={styles[\"link\"]}\n              href=\"https://github.com/amielfilarca/instagram-clone\"\n              target=\"_blank\"\n            >\n              Github\n            </a>\n          </div>\n          <div className={styles[\"copyright\"]}>\n            © 2020 Instagram Clone by Amiel Filarca\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { auth } from \"./components/Firebase\";\nimport HomePage from \"./pages/HomePage\";\nimport PostItem from \"./components/PostItem\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AuthenticationPage from \"./pages/AuthenticationPage/AuthenticationPage\";\n\nfunction App() {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  auth.onAuthStateChanged(\n    function (user) {\n      if (user) {\n        setIsSignedIn(true);\n      } else {\n        setIsSignedIn(false);\n      }\n    },\n    function (error) {\n      console.log(error);\n    }\n  );\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <AuthenticationPage />\n          {isSignedIn && <HomePage />}\n        </Route>\n        <Route path=\"/post/:id\" children={<PostItem />} />\n        <Route path=\"*\">\n          <h1>404: Page not found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}