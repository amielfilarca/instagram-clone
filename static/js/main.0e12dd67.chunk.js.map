{"version":3,"sources":["components/Posts/Post.module.css","components/PostItem/PostItem.module.css","components/LikeButton/LikeButton.module.css","components/Posts/Posts.module.css","components/Firebase/index.js","components/Authentication/index.js","components/Authentication/Authentication.js","components/NewPost/index.js","components/NewPost/NewPost.js","hooks/useFirestore.js","components/Comments/index.js","components/LikeButton/index.js","components/LikeButton/LikeButton.js","components/NewComment/index.js","components/NewComment/NewComment.js","components/Posts/Post.js","components/Posts/index.js","components/Posts/Posts.js","pages/HomePage/index.js","pages/HomePage/HomePage.js","hooks/useFirestoreID.js","components/PostItem/PostItem.js","components/PostItem/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","storage","FieldValue","serverTimestamp","Authentication","useState","user","setUser","onAuthStateChanged","error","console","log","alt","src","photoURL","displayName","onClick","provider","GoogleAuthProvider","signInWithPopup","catch","signOut","NewPost","file","setFile","caption","setCaption","setError","types","onSubmit","event","preventDefault","includes","type","folderName","fileType","getFolderName","storageRef","ref","name","firestoreRef","collection","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","a","createdAt","Date","currentUser","uid","getDownloadURL","then","url","add","userImage","comments","likedBy","autoComplete","htmlFor","onChange","target","files","id","value","disabled","useFirestore","posts","setPosts","useEffect","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","Comments","LikeButton","liked","setLiked","filter","liker","length","handleLike","updatedLikedBy","update","handleRemoveLike","className","styles","NewComment","comment","setComment","handlePostComment","get","currentComments","newComment","placeholder","Image","Video","autoPlay","loop","Post","post","relativeDate","formatDistanceToNow","fromUnixTime","seconds","test","to","Posts","map","key","HomePage","useFirestoreID","setPost","err","PostItem","useParams","Object","keys","indexOf","App","isSignedIn","setIsSignedIn","exact","path","children","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,eAAe,2BAA2B,aAAa,yBAAyB,QAAU,sBAAsB,gBAAgB,4BAA4B,cAAc,0BAA0B,QAAU,sBAAsB,iBAAiB,+B,mBCA7TD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,QAAU,4B,mBCAhGD,EAAOC,QAAU,CAAC,cAAc,kC,mBCAhCD,EAAOC,QAAU,CAAC,MAAQ,uB,qLCc1BC,gBAVuB,CACrBC,OAAQC,0CACRC,WAAYD,wCACZE,YAAaF,+CACbG,UAAWH,wBACXI,cAAeJ,oCACfK,kBAAmBL,eACnBM,MAAON,8CAKMF,QACFS,EAAOT,SACPU,EAAYV,cACZW,EAAUX,YACEA,YAAmBY,WAAWC,gBCnBxCC,MCCA,WAA2B,IAAD,EACfC,mBAAS,MADM,mBAChCC,EADgC,KAC1BC,EAD0B,KAyBvC,OAtBAR,EAAKS,oBACH,SAAUF,GAENC,EADED,GAGM,SAGZ,SAAUG,GACRC,QAAQC,IAAIF,MAcd,6BACE,8CACCH,GAAQ,yBAAKM,IAAI,OAAOC,IAAKP,EAAKQ,WAClCR,GAAQ,4BAAKA,EAAKS,YAAV,mBACPT,GAAQ,4BAAQU,QAdD,WACnB,IAAMC,EAAW,IAAI3B,EAASS,KAAKmB,mBACnCnB,EAAKoB,gBAAgBF,GAAUG,OAAM,SAACX,GAAD,OAAWC,QAAQC,IAAIF,QAYhD,uBACTH,GAAQ,4BAAQU,QAVC,WACpBjB,EAAKsB,UAAUD,OAAM,SAACX,GAAD,OAAWC,QAAQC,IAAIF,QASjC,c,wBChCAa,MCCA,WAAoB,IAAD,EACRjB,mBAAS,MADD,mBACzBkB,EADyB,KACnBC,EADmB,OAEFnB,mBAAS,MAFP,mBAEzBoB,EAFyB,KAEhBC,EAFgB,OAGNrB,mBAAS,MAHH,mBAGzBI,EAHyB,KAGlBkB,EAHkB,KAK1BC,EAAQ,CACZ,aACA,YACA,YACA,aACA,aAyEF,OACE,6BACE,wCACA,0BAAMC,SAzCW,SAACC,GAEpB,GADAA,EAAMC,iBACFR,GAAQK,EAAMI,SAAST,EAAKU,MAAO,CACrC,IAAMC,EAnCY,SAACC,GACrB,OAAQA,GACN,IAAK,aAEL,IAAK,YACH,MAAO,SACT,IAAK,YAEL,IAAK,aAEL,IAAK,YACH,MAAO,UAwBUC,CAAcb,EAAKU,MAChCI,EAAapC,EAAQqC,IAAIJ,EAAa,IAAMX,EAAKgB,MACjDC,EAAexC,EAAUyC,WAAW,SACpCC,EAAaL,EAAWM,IAAIpB,GAClCmB,EAAWE,GACT,iBACA,SAAUC,GACR,IAAMC,EACHD,EAASE,iBAAmBF,EAASG,WAAc,IACtDtC,QAAQC,IAAI,aAAemC,EAAW,aAExC,SAAUrC,GACRC,QAAQC,IAAIF,KARhB,sBAUE,oCAAAwC,EAAA,6DACQC,EAAY,IAAIC,KADxB,EAEyCpD,EAAKqD,YAApCC,EAFV,EAEUA,IAAKtC,EAFf,EAEeA,YAAaD,EAF5B,EAE4BA,SAF5B,SAGQ4B,EAAWG,SAASP,IAAIgB,iBAAiBC,MAAK,SAAUC,GAC5DhB,EAAaiB,IAAI,CACfD,MACA/B,UACAyB,YACAG,MACA/C,KAAMS,EACN2C,UAAW5C,EACXmB,KAAMV,EAAKU,KACX0B,SAAU,GACVC,QAAS,QAbf,8CAwB4BC,aAAa,OACzC,2BAAOC,QAAQ,QAAf,mBACA,2BAAOC,SA1DY,SAACjC,GACpBF,EAAMI,SAASF,EAAMkC,OAAOC,MAAM,GAAGhC,OACvCN,EAAS,MACTH,EAAQM,EAAMkC,OAAOC,MAAM,KAE3BtC,EACE,+EAoDmCM,KAAK,OAAOiC,GAAG,SAClD,2BAAOJ,QAAQ,WAAf,mBACA,2BAAOC,SAjDe,SAACjC,GAC3BJ,EAAWI,EAAMkC,OAAOG,QAgDkBlC,KAAK,OAAOiC,GAAG,YACrD,2BAAOjC,KAAK,SAASkC,MAAM,QAAQC,SAAU3D,KAE9CA,GAAS,4BAAKA,K,QCxEN4D,EArBM,SAAC5B,GAAgB,IAAD,EACTpC,mBAAS,IADA,mBAC5BiE,EAD4B,KACrBC,EADqB,KAkBnC,OAfAC,qBAAU,WACR,IAAMC,EAAQzE,EACXyC,WAAWA,GACXiC,QAAQ,YAAa,QACrBC,YAAW,SAAC9B,GACX,IAAI+B,EAAY,GAChB/B,EAASgC,SAAQ,SAACC,GAChBF,EAAUG,KAAV,2BAAoBD,EAAIE,QAAxB,IAAgCd,GAAIY,EAAIZ,SAE1CK,EAASK,MAGb,OAAO,kBAAMH,OACZ,CAAChC,IAEG,CAAE6B,UCnBIW,I,yBCAAC,MCEA,YAAsC,IAAhBhB,EAAe,EAAfA,GAAIN,EAAW,EAAXA,QACnCtD,EAAO,GACPP,EAAKqD,cAAa9C,EAAOP,EAAKqD,aAFgB,MAGX9C,EAA/B+C,EAH0C,EAG1CA,IAAKtC,EAHqC,EAGrCA,YAAaD,EAHwB,EAGxBA,SACpBwB,EAAMtC,EAAUyC,WAAW,SAASqC,IAAIZ,GAJI,EAKxB7D,oBAAS,GALe,mBAK3C8E,EAL2C,KAKpCC,EALoC,KAOlDZ,qBAAU,WACiBZ,EAAQyB,QAAO,SAACC,GACvC,OAAOA,EAAMjC,MAAQA,KAEFkC,OAAS,EAC5BH,GAAS,GAETA,GAAS,MAIb,IAAMI,EAAU,uCAAG,4BAAAvC,EAAA,6DACXwC,EADW,sBAEZ7B,GAFY,CAGf,CACEP,MACA/C,KAAMS,EACN2C,UAAW5C,EACXoC,UAAW,IAAIC,QAPF,SAWXb,EAAIoD,OAAO,CAAE9B,QAAS6B,IAXX,2CAAH,qDAcVE,EAAgB,uCAAG,4BAAA1C,EAAA,6DACjBwC,EAAiB7B,EAAQyB,QAAO,SAACC,GACrC,OAAOA,EAAMjC,MAAQA,KAFA,SAKjBf,EAAIoD,OAAO,CAAE9B,QAAS6B,IALL,2CAAH,qDAQtB,OACE,6BACGN,GACC,4BAAQS,UAAWC,IAAO,eAAgB7E,QAAS2E,GAAnD,gBAIAR,GACA,4BAAQS,UAAWC,IAAO,eAAgB7E,QAASwE,GAAnD,UClDOM,MCCA,YAA6B,IAAP5B,EAAM,EAANA,GAAM,EACX7D,mBAAS,MADE,mBAClC0F,EADkC,KACzBC,EADyB,KAEnC1D,EAAMtC,EAAUyC,WAAW,SAASqC,IAAIZ,GAE9C,GAAInE,EAAKqD,YAAa,CAAC,IAAD,EACmBrD,EAAKqD,YAApCC,EADY,EACZA,IAAKtC,EADO,EACPA,YAAaD,EADN,EACMA,SAMpBmF,EAAiB,uCAAG,sBAAAhD,EAAA,sEAClBX,EACH4D,MACA3C,KAFG,uCAEE,WAAgBuB,GAAhB,qBAAA7B,EAAA,6DACEC,EAAY,IAAIC,KAChBgD,EAAkBrB,EAAIE,OAAOrB,SAC7ByC,EAAa,CACjBL,UACA1C,MACA/C,KAAMS,EACN2C,UAAW5C,EACXoC,aAEES,EAAW,GAEbA,EADEwC,EACM,sBAAOA,GAAP,CAAwBC,IAErB,CAACA,GAdV,SAgBE9D,EAAIoD,OAAO,CACf/B,aAjBE,2CAFF,uDAsBHvC,OAAM,SAAUX,GACfC,QAAQC,IAAIF,MAxBQ,2CAAH,qDA2BvB,OACE,6BACE,yBAAKG,IAAKG,EAAaF,IAAKC,IAC5B,2BACEiD,SAnCsB,SAACjC,GAC3BkE,EAAWlE,EAAMkC,OAAOG,QAmCpBlC,KAAK,OACLoE,YAAY,qBAEd,4BAAQrF,QAASiF,GAAjB,SAIJ,OAAO,+B,yCC7CX,SAASK,EAAT,GAAkC,IAAjB7E,EAAgB,EAAhBA,QAAS+B,EAAO,EAAPA,IACxB,OAAO,yBAAKoC,UAAWC,IAAM,MAAWjF,IAAKa,EAASZ,IAAK2C,IAG7D,SAAS+C,EAAT,GAA+B,IAAd/C,EAAa,EAAbA,IAAKvB,EAAQ,EAARA,KACpB,OACE,2BAAO2D,UAAWC,IAAM,MAAWW,UAAQ,EAACC,MAAI,GAC9C,4BAAQ5F,IAAK2C,EAAKvB,KAAMA,KAKf,SAASyE,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAE3BlF,EASEkF,EATFlF,QACAyB,EAQEyD,EARFzD,UACAgB,EAOEyC,EAPFzC,GACAV,EAMEmD,EANFnD,IACAlD,EAKEqG,EALFrG,KACAoD,EAIEiD,EAJFjD,UACAzB,EAGE0E,EAHF1E,KAEA2B,GACE+C,EAFFhD,SAEEgD,EADF/C,SAGIgD,EAAeC,YACnBC,YAAa5D,EAAU6D,SACvB,IAAI5D,MAKN,OACE,yBAAKyC,UAAWC,IAAM,MACnB,SAASmB,KAAK/E,IAAS,kBAACqE,EAAD,CAAO7E,QAASA,EAAS+B,IAAKA,IACrD,SAASwD,KAAK/E,IAAS,kBAACsE,EAAD,CAAO/C,IAAKA,EAAKvB,KAAMA,IAC/C,yBAAK2D,UAAWC,IAAO,iBACrB,yBAAKD,UAAWC,IAAO,cAAejF,IAAKN,EAAMO,IAAK6C,IACtD,yBAAKkC,UAAWC,IAAM,SACpB,uBAAGD,UAAWC,IAAO,kBAAmBvF,GACxC,uBAAGsF,UAAWC,IAAO,gBAAiBe,EAAtC,SAEF,yBAAKhB,UAAWC,IAAM,SACpB,kBAAC,EAAD,CACED,UAAWC,IAAO,eAClB3B,GAAIA,EACJN,QAASA,IAEX,6BACE,kBAAC,IAAD,CAAMqD,GAAE,iCAA4B/C,IAClC,4BACElD,QArBQ,aAsBR4E,UAAWC,IAAO,mBAFpB,gB,qBCxDCqB,MCGA,WAAkB,IACvB5C,EAAUD,EAAa,SAAvBC,MAER,OACE,yBAAKsB,UAAWC,IAAOvB,OACpBA,GAASA,EAAM6C,KAAI,SAACR,GAAD,OAAU,kBAACD,EAAD,CAAMU,IAAKT,EAAKzC,GAAIyC,KAAMA,SCR/CU,MCEA,WACb,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCuBSC,EA3BQ,SAACpD,GAAQ,IAAD,EACL7D,mBAAS,IADJ,mBACtBsG,EADsB,KAChBY,EADgB,OAEHlH,mBAAS,MAFN,mBAEtBI,EAFsB,KAEfkB,EAFe,KAwB7B,OApBA6C,qBAAU,WACR,IACMC,EADMzE,EAAUyC,WAAW,SAASqC,IAAIZ,GAC5BS,YAChB,SAAC9B,GACC,IAAMmC,EAAOnC,EAASmC,OAClBA,IACFA,EAAK9B,UAAY2D,YACfC,YAAa9B,EAAK9B,UAAU6D,SAC5B,IAAI5D,MAENoE,EAAQvC,OAGZ,SAACwC,GACC7F,EAAS6F,MAGb,OAAO,kBAAM/C,OACZ,CAACP,IAEG,CAAEyC,OAAMlG,U,iBCtBjB,SAAS6F,EAAT,GAAkC,IAAjB7E,EAAgB,EAAhBA,QAAS+B,EAAO,EAAPA,IACxB,OAAO,yBAAKoC,UAAWC,IAAM,MAAWjF,IAAKa,EAASZ,IAAK2C,IAG7D,SAAS+C,EAAT,GAA+B,IAAd/C,EAAa,EAAbA,IAAKvB,EAAQ,EAARA,KACpB,OACE,2BAAO2D,UAAWC,IAAM,MAAWW,UAAQ,EAACC,MAAI,GAC9C,4BAAQ5F,IAAK2C,EAAKvB,KAAMA,KCXfwF,MDgBA,WAAqB,IAC1BvD,EAAOwD,cAAPxD,GACAyC,EAASW,EAAepD,GAAxByC,KAER,GAAIA,GAAqC,IAA7BgB,OAAOC,KAAKjB,GAAMpB,OAAc,CAAC,IAEzC9D,EAQEkF,EARFlF,QACAyB,EAOEyD,EAPFzD,UACAM,EAMEmD,EANFnD,IACAlD,EAKEqG,EALFrG,KAEA2B,GAGE0E,EAJFjD,UAIEiD,EAHF1E,MACA0B,EAEEgD,EAFFhD,SAEEgD,EADF/C,QAGF,OACE,yBAAKgC,UAAWC,IAAM,SACpB,6BACG,SAASmB,KAAK/E,IAAS,kBAAC,EAAD,CAAOR,QAASA,EAAS+B,IAAKA,IACrD,SAASwD,KAAK/E,IAAS,kBAAC,EAAD,CAAOuB,IAAKA,EAAKvB,KAAMA,KAEjD,yBAAK2D,UAAWC,IAAM,SACpB,2BAAIvF,GACJ,2BAAImB,GACHkC,GACCA,EAASwD,KAAI,SAACpB,GAAD,OACX,yBAAKqB,IAAKzD,EAASkE,QAAQ9B,IACzB,yBAAKnF,IAAKmF,EAAQzF,KAAMO,IAAKkF,EAAQrC,YACrC,2BAAIqC,EAAQA,aAGlB,kBAAC,EAAD,CAAY7B,GAAIA,IACfhB,GAAa,2BAAIA,EAAJ,UAKpB,OACE,6BACE,iDEjBO4E,MAlCf,WAAgB,IAAD,EACuBzH,oBAAS,GADhC,mBACN0H,EADM,KACMC,EADN,KAgBb,OAbAjI,EAAKS,oBACH,SAAUF,GAEN0H,IADE1H,MAMN,SAAUG,GACRC,QAAQC,IAAIF,MAKd,6BAEE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwH,OAAK,EAACC,KAAK,qBACfH,GAAc,kBAAC,EAAD,OAEjB,kBAAC,IAAD,CAAOG,KAAK,6BAA6BC,SAAU,kBAAC,EAAD,QACnD,kBAAC,IAAD,CAAOD,KAAK,KACV,uDCtBUE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzF,MAAK,SAAA0F,GACJA,EAAaC,gBAEd9H,OAAM,SAAAX,GACLC,QAAQD,MAAMA,EAAM0I,c","file":"static/js/main.0e12dd67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3eRi_\",\"media\":\"Post_media__1MKAJ\",\"post-details\":\"Post_post-details__sRYCO\",\"user-image\":\"Post_user-image__1j0ao\",\"details\":\"Post_details__3dKFz\",\"uploader-name\":\"Post_uploader-name__1chH1\",\"time-posted\":\"Post_time-posted__3lvXY\",\"actions\":\"Post_actions__3oRHE\",\"comment-button\":\"Post_comment-button__1J3B4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PostItem_wrapper__2nVTb\",\"media\":\"PostItem_media__Hz1Wj\",\"details\":\"PostItem_details__2GpRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like-button\":\"LikeButton_like-button__1YtNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__HBDHm\"};","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n","import Authentication from \"./Authentication\";\n\nexport default Authentication;\n","import firebase, { auth } from \"../Firebase\";\nimport React, { useState } from \"react\";\n\nexport default function Authentication() {\n  const [user, setUser] = useState(null);\n\n  auth.onAuthStateChanged(\n    function (user) {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n    },\n    function (error) {\n      console.log(error);\n    }\n  );\n\n  const handleSignIn = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).catch((error) => console.log(error));\n  };\n\n  const handleSignOut = () => {\n    auth.signOut().catch((error) => console.log(error));\n  };\n\n  return (\n    <div>\n      <h2>Authentication</h2>\n      {user && <img alt=\"User\" src={user.photoURL} />}\n      {user && <h3>{user.displayName} is signed in.</h3>}\n      {!user && <button onClick={handleSignIn}>Sign in with Google</button>}\n      {user && <button onClick={handleSignOut}>Sign out</button>}\n    </div>\n  );\n}\n","import NewPost from \"./NewPost\";\n\nexport default NewPost;\n","import React, { useState } from \"react\";\nimport { auth, firestore, storage } from \"../Firebase\";\n\nexport default function NewPost() {\n  const [file, setFile] = useState(null);\n  const [caption, setCaption] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = [\n    \"image/jpeg\",\n    \"image/png\",\n    \"video/mp4\",\n    \"video/webm\",\n    \"video/ogg\",\n  ];\n\n  const getFolderName = (fileType) => {\n    switch (fileType) {\n      case \"image/jpeg\":\n        return \"images\";\n      case \"image/png\":\n        return \"images\";\n      case \"video/mp4\":\n        return \"videos\";\n      case \"video/webm\":\n        return \"videos\";\n      case \"video/ogg\":\n        return \"videos\";\n      default:\n        break;\n    }\n  };\n\n  const handleFileChange = (event) => {\n    if (types.includes(event.target.files[0].type)) {\n      setError(null);\n      setFile(event.target.files[0]);\n    } else {\n      setError(\n        \"Invalid file: Please select an image (jpeg/png) or a video (mp4/webm/ogg).\"\n      );\n    }\n  };\n\n  const handleCaptionChange = (event) => {\n    setCaption(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (file && types.includes(file.type)) {\n      const folderName = getFolderName(file.type);\n      const storageRef = storage.ref(folderName + \"/\" + file.name);\n      const firestoreRef = firestore.collection(\"posts\");\n      const uploadTask = storageRef.put(file);\n      uploadTask.on(\n        \"state_changed\",\n        function (snapshot) {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n        },\n        function (error) {\n          console.log(error);\n        },\n        async function () {\n          const createdAt = new Date();\n          const { uid, displayName, photoURL } = auth.currentUser;\n          await uploadTask.snapshot.ref.getDownloadURL().then(function (url) {\n            firestoreRef.add({\n              url,\n              caption,\n              createdAt,\n              uid,\n              user: displayName,\n              userImage: photoURL,\n              type: file.type,\n              comments: [],\n              likedBy: [],\n            });\n          });\n        }\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2>New Post</h2>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label htmlFor=\"file\">Choose an image</label>\n        <input onChange={handleFileChange} type=\"file\" id=\"file\" />\n        <label htmlFor=\"caption\">Write a caption</label>\n        <input onChange={handleCaptionChange} type=\"text\" id=\"caption\" />\n        <input type=\"submit\" value=\"Share\" disabled={error} />\n      </form>\n      {error && <h3>{error}</h3>}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { firestore } from \"../components/Firebase\";\n\nconst useFirestore = (collection) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const unsub = firestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        let documents = [];\n        snapshot.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setPosts(documents);\n      });\n\n    return () => unsub();\n  }, [collection]);\n\n  return { posts };\n};\n\nexport default useFirestore;\n","import Comments from \"./Comments\";\n\nexport default Comments;\n","import LikeButton from \"./LikeButton\";\n\nexport default LikeButton;\n","import React, { useEffect, useState } from \"react\";\nimport { auth, firestore } from \"../Firebase\";\nimport styles from \"./LikeButton.module.css\";\n\nexport default function LikeButton({ id, likedBy }) {\n  let user = {};\n  if (auth.currentUser) user = auth.currentUser;\n  const { uid, displayName, photoURL } = user;\n  const ref = firestore.collection(\"posts\").doc(id);\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    const userAlreadyLiked = likedBy.filter((liker) => {\n      return liker.uid === uid;\n    });\n    if (userAlreadyLiked.length > 0) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  });\n\n  const handleLike = async () => {\n    const updatedLikedBy = [\n      ...likedBy,\n      {\n        uid,\n        user: displayName,\n        userImage: photoURL,\n        createdAt: new Date(),\n      },\n    ];\n\n    await ref.update({ likedBy: updatedLikedBy });\n  };\n\n  const handleRemoveLike = async () => {\n    const updatedLikedBy = likedBy.filter((liker) => {\n      return liker.uid !== uid;\n    });\n\n    await ref.update({ likedBy: updatedLikedBy });\n  };\n\n  return (\n    <div>\n      {liked && (\n        <button className={styles[\"like-button\"]} onClick={handleRemoveLike}>\n          Remove Like\n        </button>\n      )}\n      {!liked && (\n        <button className={styles[\"like-button\"]} onClick={handleLike}>\n          Like\n        </button>\n      )}\n    </div>\n  );\n}\n","import NewComment from \"./NewComment\";\n\nexport default NewComment;\n","import React, { useState } from \"react\";\nimport { auth, firestore } from \"../Firebase\";\n\nexport default function NewComment({ id }) {\n  const [comment, setComment] = useState(null);\n  const ref = firestore.collection(\"posts\").doc(id);\n\n  if (auth.currentUser) {\n    const { uid, displayName, photoURL } = auth.currentUser;\n\n    const handleCommentChange = (event) => {\n      setComment(event.target.value);\n    };\n\n    const handlePostComment = async () => {\n      await ref\n        .get()\n        .then(async function (doc) {\n          const createdAt = new Date();\n          const currentComments = doc.data().comments;\n          const newComment = {\n            comment,\n            uid,\n            user: displayName,\n            userImage: photoURL,\n            createdAt,\n          };\n          let comments = {};\n          if (currentComments) {\n            comments = [...currentComments, newComment];\n          } else {\n            comments = [newComment];\n          }\n          await ref.update({\n            comments,\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    };\n    return (\n      <div>\n        <img alt={displayName} src={photoURL} />\n        <input\n          onChange={handleCommentChange}\n          type=\"text\"\n          placeholder=\"Add a comment...\"\n        />\n        <button onClick={handlePostComment}>Post</button>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React, { useState } from \"react\";\nimport Comments from \"../Comments\";\nimport LikeButton from \"../LikeButton\";\nimport NewComment from \"../NewComment\";\nimport styles from \"./Post.module.css\";\nimport { fromUnixTime, formatDistanceToNow } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\n\nfunction Image({ caption, url }) {\n  return <img className={styles[\"media\"]} alt={caption} src={url}></img>;\n}\n\nfunction Video({ url, type }) {\n  return (\n    <video className={styles[\"media\"]} autoPlay loop>\n      <source src={url} type={type} />\n    </video>\n  );\n}\n\nexport default function Post({ post }) {\n  const {\n    caption,\n    createdAt,\n    id,\n    url,\n    user,\n    userImage,\n    type,\n    comments,\n    likedBy,\n  } = post;\n\n  const relativeDate = formatDistanceToNow(\n    fromUnixTime(createdAt.seconds),\n    new Date()\n  );\n\n  const handleComment = () => {};\n\n  return (\n    <div className={styles[\"post\"]}>\n      {/image/g.test(type) && <Image caption={caption} url={url} />}\n      {/video/g.test(type) && <Video url={url} type={type} />}\n      <div className={styles[\"post-details\"]}>\n        <img className={styles[\"user-image\"]} alt={user} src={userImage} />\n        <div className={styles[\"details\"]}>\n          <p className={styles[\"uploader-name\"]}>{user}</p>\n          <p className={styles[\"time-posted\"]}>{relativeDate} ago</p>\n        </div>\n        <div className={styles[\"actions\"]}>\n          <LikeButton\n            className={styles[\"like-button\"]}\n            id={id}\n            likedBy={likedBy}\n          />\n          <div>\n            <Link to={`/instagram-clone/posts/${id}`}>\n              <button\n                onClick={handleComment}\n                className={styles[\"comment-button\"]}\n              >\n                Comment\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      {/* <p>{caption}</p>\n      <Comments comments={comments} />\n      <NewComment id={id} /> */}\n    </div>\n  );\n}\n","import Posts from \"./Posts\";\n\nexport default Posts;\n","import React from \"react\";\nimport useFirestore from \"../../hooks/useFirestore\";\nimport Post from \"./Post\";\nimport styles from \"./Posts.module.css\";\n\nexport default function Posts() {\n  const { posts } = useFirestore(\"posts\");\n\n  return (\n    <div className={styles.posts}>\n      {posts && posts.map((post) => <Post key={post.id} post={post} />)}\n    </div>\n  );\n}\n","import HomePage from \"./HomePage\";\n\nexport default HomePage;\n","import React from \"react\";\nimport NewPost from \"../../components/NewPost\";\nimport Posts from \"../../components/Posts\";\n\nexport default function HomePage() {\n  return (\n    <div>\n      <NewPost />\n      <Posts />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { firestore } from \"../components/Firebase\";\nimport { fromUnixTime, formatDistanceToNow } from \"date-fns\";\n\nconst useFirestoreID = (id) => {\n  const [post, setPost] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const ref = firestore.collection(\"posts\").doc(id);\n    const unsub = ref.onSnapshot(\n      (snapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          data.createdAt = formatDistanceToNow(\n            fromUnixTime(data.createdAt.seconds),\n            new Date()\n          );\n          setPost(data);\n        }\n      },\n      (err) => {\n        setError(err);\n      }\n    );\n    return () => unsub();\n  }, [id]);\n\n  return { post, error };\n};\n\nexport default useFirestoreID;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useFirestoreID from \"../../hooks/useFirestoreID\";\nimport NewComment from \"../NewComment\";\nimport styles from \"./PostItem.module.css\";\n\nfunction Image({ caption, url }) {\n  return <img className={styles[\"media\"]} alt={caption} src={url}></img>;\n}\n\nfunction Video({ url, type }) {\n  return (\n    <video className={styles[\"media\"]} autoPlay loop>\n      <source src={url} type={type} />\n    </video>\n  );\n}\n\nexport default function PostItem() {\n  const { id } = useParams();\n  const { post } = useFirestoreID(id);\n\n  if (post && Object.keys(post).length !== 0) {\n    const {\n      caption,\n      createdAt,\n      url,\n      user,\n      userImage,\n      type,\n      comments,\n      likedBy,\n    } = post;\n\n    return (\n      <div className={styles[\"wrapper\"]}>\n        <div>\n          {/image/g.test(type) && <Image caption={caption} url={url} />}\n          {/video/g.test(type) && <Video url={url} type={type} />}\n        </div>\n        <div className={styles[\"details\"]}>\n          <p>{user}</p>\n          <p>{caption}</p>\n          {comments &&\n            comments.map((comment) => (\n              <div key={comments.indexOf(comment)}>\n                <img alt={comment.user} src={comment.userImage} />\n                <p>{comment.comment}</p>\n              </div>\n            ))}\n          <NewComment id={id} />\n          {createdAt && <p>{createdAt} ago</p>}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Post not found.</h1>\n      </div>\n    );\n  }\n}\n","import PostItem from \"./PostItem\";\n\nexport default PostItem;\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Authentication from \"./components/Authentication\";\nimport { auth } from \"./components/Firebase\";\nimport HomePage from \"./pages/HomePage\";\nimport PostItem from \"./components/PostItem\";\n\nfunction App() {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  auth.onAuthStateChanged(\n    function (user) {\n      if (user) {\n        setIsSignedIn(true);\n      } else {\n        setIsSignedIn(false);\n      }\n    },\n    function (error) {\n      console.log(error);\n    }\n  );\n\n  return (\n    <div>\n      {/* <h1>Instagram</h1> */}\n      <Authentication />\n\n      <Switch>\n        <Route exact path=\"/instagram-clone/\">\n          {isSignedIn && <HomePage />}\n        </Route>\n        <Route path=\"/instagram-clone/posts/:id\" children={<PostItem />} />\n        <Route path=\"*\">\n          <h1>404: Page not found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}